const {v4: uuid} = require("uuid");let {users, movies} = require('../dataBase/data')module.exports = {    register: (req, res) => {        const {user, passOne} = req.body        const newUser = {            user,            password: passOne,            id: uuid(),            notifications: []        }        users.push(newUser)        res.send({success: true, message: "Registered"})    },    logUser: (req, res) => {        const {user, pass} = req.body        const isUser = users.find(x => x.user === user && x.password === pass)        console.log(isUser)        res.send({success: true, message: {user: user, id: isUser.id, notifications: isUser.notifications}})    },    logout: (req, res) => {        const {id} = req.params        const user = users.find(x => x.id === id)        user.notifications.splice(0, user.notifications.length)        res.send({success: true})    },    createItem: (req, res) => {        res.send({success: true, message: movies})    },    comment: (req, res) => {        const {movieId, comment, comCreator} = req.body        const user = users.find(x => x.id === comCreator)        const movie = movies.find(x => x.id === movieId)        comment.user = user.user        movie.reviews.unshift(comment)        const movieCreator = users.find(x => x.user === movie.createdBy)        const notification = {            movieTitle: movie.title,            photo: movie.poster,            movieId,            notifIndex: movieCreator.notifications.length        }        movieCreator.notifications.push(notification)        res.send({success: true, message: movies})    },    getInfo: (req, res) => {        res.send({success: true, message: movies})    },    removeNotif: (req, res) => {        const {userID, index} = req.body        const user = users.find(x => x.id === userID)        const notifIndex = user.notifications.findIndex(x => x.notifIndex === index)        user.notifications.splice(notifIndex, 1)        res.send({success: true, message: user.notifications})    }}